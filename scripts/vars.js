// vars.js : variables
var vars = {
  version: "0.8.1",
  menu: "mm",
  addstate: "lection",
  viewstate: "none",
  currentKeyValue: "",
  currentValueValue: "",
  currentTValueValue: "",
  currentLectionValue: "",
  currentTransformValue: "",
  currentActionValue: "",
  currentParamValue: "",
  currentParam2Value: "",
  currentSourceValue: "",
  correctState: "lection",
  currentLectionCValue: "",
  currentIdCValue: "",
  currentKeyCValue: "",
  currentValueCValue: "",
  currentLectionsValue: "",
  joinState: null,
  currentDestinationValue: "",
  currentBroadcastValue: "",
  broadcastState: "main",
  recvPeer: null,
  recvConn: null,
  sendPeer: null,
  sendConn: null,
  docState: "toc",
  docNum: "",
  selectedLection: "",
  generateState: "transform",
  moveState: "source",
  gitState: "select",
  currentGitValue: "",
  dataToTrain: [],
  shuffledKeys: [],
  sessionAttempts: new Map(),
  uniqueKeyChar: " ",
  trainstate: "lection",
  wrongAttempts: new Map(),
  currentKey: "",
  docPages: 26,
  configurationState: "view",
  configurationIndexSelector: 1,
  totalConfigurationOptions: 2,
  defaultConfiguration: { "MenuExitKey": "-", "IgnoreCase": false },
  configuration: { "MenuExitKey": "-", "IgnoreCase": false },
  configurationChanged: [],
  configurationValue: "",
  configurationValueOld: "",
  db: "",
  themeColor: "#5294e2",
  redColor: "#ea4f4f",
  currentSessionScore: 0,
  AvabialeModes: Array.from({ length: 5 }, (e, i) => i),
  trainStats: {
    totalCorrect: 0,
    totalWrong: 0,
    hardestWord: { key: "", attempts: 0 },
  },
  GenerateModesDescription: { 0: "Sort", 1: "Reverse", 2: "Remove all under specified value", 3: "Remove all over specified value", 4: "Strip down to specified value", },
  GenerateModesParams: { 0: 1, 1: 0, 2: 2, 3: 2, 4: 1, },
  menuDisplayEl: document.getElementById("barp1"),
  clockDisplayEl: document.getElementById("barp2"),
  lastChangelog: `
  v0.8.1
    Alphabetically sorting in Lection Menu
  `
}
export { vars }
